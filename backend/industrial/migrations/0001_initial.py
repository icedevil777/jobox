# Generated by Django 3.2 on 2022-10-20 14:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import industrial.models
import jsonfield.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core_base', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('have_resume', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('published', 'Опубликована'), ('moderation', 'На модерации'), ('need_to_paid', 'Ждёт оплаты'), ('rejected', 'Отклонена'), ('expired', 'Истек срок публикации'), ('closed', 'Closed')], default='published', max_length=20)),
                ('name_app', models.CharField(blank=True, max_length=128, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='%г-%м-%д')),
                ('first_name', models.CharField(blank=True, max_length=64, null=True)),
                ('second_name', models.CharField(blank=True, max_length=64, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=64, null=True)),
                ('qualification', models.CharField(default='Нет квалификации', max_length=64)),
                ('user_email', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('tel', models.CharField(blank=True, max_length=64, null=True)),
                ('salary', models.IntegerField(blank=True, default=0, null=True)),
                ('about_app', models.TextField(blank=True, max_length=4000, null=True)),
            ],
            options={
                'verbose_name': 'Соискатель',
                'verbose_name_plural': 'Соискатели',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1024, null=True)),
                ('opf_full', models.CharField(blank=True, max_length=250, null=True)),
                ('director_name', models.CharField(blank=True, max_length=128, null=True)),
                ('director_post', models.CharField(blank=True, max_length=128, null=True)),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('about_company', models.TextField(blank=True, null=True)),
                ('company_description', models.TextField(blank=True, null=True)),
                ('inn', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('ogrn', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('kpp', models.CharField(blank=True, max_length=20, null=True)),
                ('dadata_date', jsonfield.fields.JSONField(default=dict)),
                ('ref_code', models.CharField(default=uuid.uuid4, max_length=40)),
                ('show_on_main_page', models.BooleanField(default=False, verbose_name='на гл стр')),
                ('brand_name', models.CharField(blank=True, max_length=150, null=True)),
                ('brand_logo', models.ImageField(blank=True, null=True, upload_to='company/brand_logos')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
            },
        ),
        migrations.CreateModel(
            name='CompanyFinanceTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('uniq_uuid', models.CharField(default=industrial.models.uuid4_generator, max_length=40)),
                ('currency', models.CharField(choices=[('bonus_point', 'Бонус'), ('ruble', 'Рубль')], max_length=20)),
                ('action', models.CharField(choices=[('balance_replenishment', 'Пополнение баланса'), ('publication', 'Публикация'), ('bonus_credit', 'Списание бонуса'), ('bonus_debiting', 'Зачисление бонуса')], max_length=30)),
                ('amount', models.FloatField()),
                ('comment', models.TextField(blank=True, max_length=1024, null=True)),
                ('technical_comment', models.TextField(max_length=1024)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='industrial.company')),
            ],
            options={
                'verbose_name': 'Финансовая транзакция',
                'verbose_name_plural': 'Финансовые транзакции',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('moderation', 'На модерации'), ('need_to_paid', 'Ждёт оплаты'), ('rejected', 'Отклонена'), ('expired', 'Истек срок публикации'), ('closed', 'Closed'), ('published', 'Опубликована')], default='moderation', max_length=20)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('expire_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=250)),
                ('qualification', models.CharField(max_length=250)),
                ('salary', models.IntegerField(blank=True, default=0, null=True)),
                ('about_job', models.TextField(max_length=4000)),
                ('company_offers', models.TextField(max_length=4000)),
                ('requirements', models.TextField(max_length=4000)),
                ('recruiter_name', models.CharField(max_length=250)),
                ('recruiter_position', models.CharField(max_length=250)),
                ('recruiter_phone', models.CharField(max_length=250)),
                ('recruiter_email', models.CharField(max_length=100)),
                ('show_on_main_page', models.BooleanField(default=False, verbose_name='на гл стр')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='core_base.jobcategory')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='industrial.company')),
                ('employment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='core_base.employmenttype')),
                ('experience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='core_base.experience')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='core_base.location')),
                ('recruiter_communication_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='core_base.communicationmethod')),
                ('salary_condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_additional_condition', to='core_base.additionalsalarycondition')),
                ('tags', models.ManyToManyField(related_name='jobs', to='core_base.Tag')),
                ('work_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='core_base.workschedule')),
            ],
            options={
                'verbose_name': 'Вакансия',
                'verbose_name_plural': 'Вакансии',
            },
        ),
        migrations.CreateModel(
            name='ResponseToJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=150)),
                ('phone', models.CharField(max_length=150)),
                ('communication_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='responses', to='core_base.communicationmethod')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='industrial.job')),
            ],
            options={
                'verbose_name': 'Отклик',
                'verbose_name_plural': 'Отклики',
            },
        ),
        migrations.CreateModel(
            name='CompanyWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=250, null=True)),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('position', models.CharField(blank=True, max_length=250, null=True)),
                ('phone', models.CharField(blank=True, max_length=250, null=True)),
                ('is_agree_with_agreement', models.BooleanField(default=False)),
                ('is_administrator', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workers', to='industrial.company')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='industrial_worker', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyReferralChain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('ref_code', models.CharField(blank=True, max_length=50, null=True)),
                ('affiliate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals', to='industrial.company')),
                ('bonus_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referral_chain', to='industrial.companyfinancetransaction')),
                ('referral', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='affiliate', to='industrial.company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyNotifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notifications', to='industrial.company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='companyfinancetransaction',
            name='payment_for_job',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='industrial.job'),
        ),
    ]
